/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: myMessage.proto */

#ifndef PROTOBUF_C_myMessage_2eproto__INCLUDED
#define PROTOBUF_C_myMessage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _RequestMessage RequestMessage;
typedef struct _ResponseRead ResponseRead;
typedef struct _ResponseWrite ResponseWrite;


/* --- enums --- */


/* --- messages --- */

struct  _RequestMessage
{
  ProtobufCMessage base;
  int32_t type;
  int64_t offset;
  ProtobufCBinaryData content;
  int64_t size;
};
#define REQUEST_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&request_message__descriptor) \
    , 0, 0, {0,NULL}, 0 }


struct  _ResponseRead
{
  ProtobufCMessage base;
  char *content;
};
#define RESPONSE_READ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response_read__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _ResponseWrite
{
  ProtobufCMessage base;
  int64_t writenum;
};
#define RESPONSE_WRITE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response_write__descriptor) \
    , 0 }


/* RequestMessage methods */
void   request_message__init
                     (RequestMessage         *message);
size_t request_message__get_packed_size
                     (const RequestMessage   *message);
size_t request_message__pack
                     (const RequestMessage   *message,
                      uint8_t             *out);
size_t request_message__pack_to_buffer
                     (const RequestMessage   *message,
                      ProtobufCBuffer     *buffer);
RequestMessage *
       request_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   request_message__free_unpacked
                     (RequestMessage *message,
                      ProtobufCAllocator *allocator);
/* ResponseRead methods */
void   response_read__init
                     (ResponseRead         *message);
size_t response_read__get_packed_size
                     (const ResponseRead   *message);
size_t response_read__pack
                     (const ResponseRead   *message,
                      uint8_t             *out);
size_t response_read__pack_to_buffer
                     (const ResponseRead   *message,
                      ProtobufCBuffer     *buffer);
ResponseRead *
       response_read__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   response_read__free_unpacked
                     (ResponseRead *message,
                      ProtobufCAllocator *allocator);
/* ResponseWrite methods */
void   response_write__init
                     (ResponseWrite         *message);
size_t response_write__get_packed_size
                     (const ResponseWrite   *message);
size_t response_write__pack
                     (const ResponseWrite   *message,
                      uint8_t             *out);
size_t response_write__pack_to_buffer
                     (const ResponseWrite   *message,
                      ProtobufCBuffer     *buffer);
ResponseWrite *
       response_write__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   response_write__free_unpacked
                     (ResponseWrite *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RequestMessage_Closure)
                 (const RequestMessage *message,
                  void *closure_data);
typedef void (*ResponseRead_Closure)
                 (const ResponseRead *message,
                  void *closure_data);
typedef void (*ResponseWrite_Closure)
                 (const ResponseWrite *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor request_message__descriptor;
extern const ProtobufCMessageDescriptor response_read__descriptor;
extern const ProtobufCMessageDescriptor response_write__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_myMessage_2eproto__INCLUDED */
